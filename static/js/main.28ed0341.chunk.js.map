{"version":3,"sources":["reducers/index.js","store.js","components/header/header-game-styles.js","components/header/header-game.js","components/list-game-items/list-game-items.js","components/body-game/body-game.js","components/footer/footer-game-styles.js","components/footer/footer-game.js","components/app/app.js","index.js"],"names":["initialState","settings","id","load","type","arrMixItems","message","DRAGGING_ITEMS","RECORDING_MIX_ITEMS","RECORDING_GAME_RESULTS","RESTART_GAME","reducer","state","action","list","store","createStore","useStyles","makeStyles","theme","wrHeaderGame","borderBottom","textAlign","userSelect","headerGame","color","HeaderGame","classes","Box","className","ListGameItems","getItemStyle","isDragging","draggableStyle","background","this","props","index","handleRestartGame","draggableId","provided","snapshot","onClick","clsx","ref","innerRef","draggableProps","dragHandleProps","style","Component","BodyGame","onRestartGame","mixItems","recordingMixItems","arrIndex","getUnique","newArr","i","item","find","length","min","max","n","buf","value","Math","round","random","indexOf","push","res","droppableId","wrBodyGame","droppableProps","playingField","map","placeholder","mapDispatchToProps","connect","wrFooterGame","border","padding","FooterGame","componet","App","reorder","startIndex","endIndex","result","Array","from","splice","removed","onDragEnd","draggingItems","source","destination","handleEndGameCheck","recordingGameResults","p","prevProps","wrApp","playWindow","withStyles","display","justifyContent","alignItems","height","flexDirection","width","maxWidth","margin","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.28ed0341.chunk.js","sourcesContent":["const initialState = {\r\n  settings: [\r\n    {\r\n      id: 1,\r\n      load: 1,\r\n      type: 'cellOne'\r\n    },\r\n    {\r\n      id: 2,\r\n      load: 2,\r\n      type: 'cellTwo'\r\n    },\r\n    {\r\n      id: 3,\r\n      load: 3,\r\n      type: 'cellThree'\r\n    },\r\n    {\r\n      id: 4,\r\n      load: 4,\r\n      type: 'cellFoure'\r\n    },\r\n    {\r\n      id: 5,\r\n      load: 5,\r\n      type: 'cellFive'\r\n    },\r\n    {\r\n      id: 6,\r\n      load: 6,\r\n      type: 'cellSix'\r\n    },\r\n    {\r\n      id: 7,\r\n      load: 7,\r\n      type: 'cellSeven'\r\n    }\r\n  ],\r\n  arrMixItems: [],\r\n  message: 'Drag items from small to large...'\r\n};\r\n\r\nconst DRAGGING_ITEMS = 'DRAGGING_ITEMS';\r\nconst RECORDING_MIX_ITEMS = 'RECORDING_MIX_ITEMS';\r\nconst RECORDING_GAME_RESULTS = 'RECORDING_GAME_RESULTS';\r\nconst RESTART_GAME = 'RESTART_GAME';\r\n\r\nconst reducer = (state = initialState, action) => {\r\n  switch(action.type) {\r\n    case DRAGGING_ITEMS:\r\n      return {\r\n        ...state,\r\n        arrMixItems: action.list\r\n      };\r\n    case RECORDING_MIX_ITEMS:\r\n      return {\r\n        ...state,\r\n        arrMixItems: action.list\r\n      };\r\n    case RECORDING_GAME_RESULTS:\r\n      return {\r\n        ...state,\r\n        message: action.message\r\n      };\r\n    case RESTART_GAME:\r\n      return {\r\n        ...state,\r\n        arrMixItems: [],\r\n        message: 'Drag items from small to large...'\r\n      };\r\n    default:\r\n      return state;\r\n  };\r\n};\r\n\r\nexport default reducer;\r\n\r\nconst draggingItems = (list) => {\r\n  return {\r\n    type: 'DRAGGING_ITEMS',\r\n    list\r\n  };\r\n};\r\n\r\nconst recordingMixItems = (list) => {\r\n  return {\r\n    type: 'RECORDING_MIX_ITEMS',\r\n    list\r\n  };\r\n};\r\n\r\nconst recordingGameResults = (message) => {\r\n  return {\r\n    type: 'RECORDING_GAME_RESULTS',\r\n    message\r\n  };\r\n};\r\n\r\nconst onRestartGame = () => {\r\n  return {\r\n    type: 'RESTART_GAME'\r\n  };\r\n};\r\n\r\nexport {\r\n  draggingItems,\r\n  recordingMixItems,\r\n  recordingGameResults,\r\n  onRestartGame\r\n};\r\n  ","import { createStore } from 'redux';\r\nimport reducer from './reducers/index';\r\n\r\nconst store = createStore(reducer);\r\n\r\nexport default store;\r\n","// Material-UI\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  wrHeaderGame: {\r\n    borderBottom: '1px solid #fff',\r\n    textAlign: 'center',\r\n    userSelect: 'none'\r\n  },\r\n  headerGame: {\r\n    color: '#fff'\r\n  }\r\n}));\r\n\r\nexport default useStyles;\r\n","// Base\r\nimport React from 'react';\r\n\r\n// Material-UI\r\nimport Box from '@material-ui/core/Box';\r\n\r\n// Styles\r\nimport useStyles from './header-game-styles';\r\n\r\nconst HeaderGame = () => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Box className={classes.wrHeaderGame}>\r\n      <h1 className={classes.headerGame}>Drag and Drop Game</h1>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default HeaderGame;\r\n","// Base\r\nimport React, { Component } from 'react';\r\nimport clsx from 'clsx';\r\n\r\n// Material-UI\r\nimport Box from '@material-ui/core/Box';\r\n\r\n// Beautiful DND\r\nimport { Draggable } from \"react-beautiful-dnd\";\r\n\r\n// Styles\r\nimport './list-game-items-styles.css';\r\n\r\nclass ListGameItems extends Component {\r\n  \r\n  getItemStyle = (isDragging, draggableStyle) => ({\r\n    // Some basic styles to make the items look a bit nicer\r\n    userSelect: 'none',\r\n  \r\n    // Change background colour if dragging\r\n    background: isDragging ? '#A5B9C9' : '',\r\n  \r\n    // Styles we need to apply on draggables\r\n    ...draggableStyle\r\n  });\r\n\r\n  render() {\r\n    const { id, type, load, index, handleRestartGame } = this.props;\r\n\r\n    return (\r\n      <>\r\n        <Draggable draggableId={`${id}`} index={index}>\r\n          {(provided, snapshot) => (\r\n            <Box\r\n              onClick={handleRestartGame}\r\n              className={clsx('gameElement', `${type}`)}\r\n              ref={provided.innerRef}\r\n              {...provided.draggableProps}\r\n              {...provided.dragHandleProps}\r\n              style={this.getItemStyle(\r\n                snapshot.isDragging,\r\n                provided.draggableProps.style\r\n              )}\r\n            >\r\n              { load }\r\n            </Box>\r\n          )}\r\n        </Draggable>\r\n      </>\r\n    );\r\n  };\r\n};\r\n\r\nexport default ListGameItems;\r\n","// Base\r\nimport React, { Component } from 'react';\r\n\r\n// Redux\r\nimport { connect } from 'react-redux';\r\nimport { recordingMixItems, onRestartGame } from '../../reducers/index';\r\n\r\n// Material-UI\r\nimport Box from '@material-ui/core/Box';\r\n\r\n// Beautiful DND\r\nimport { Droppable } from \"react-beautiful-dnd\";\r\n\r\n// Components\r\nimport ListGameItems from '../list-game-items/list-game-items';\r\n\r\nclass BodyGame extends Component {\r\n\r\n  componentDidMount() {\r\n    this.mixItems();\r\n  };\r\n\r\n  mixItems() {\r\n    const { settings, recordingMixItems } = this.props;\r\n    const arrIndex = this.getUnique(0, 6, 7);\r\n    const newArr = [];\r\n\r\n    for (let i=0; i<arrIndex.length; i++) {\r\n      const item = settings.find((item, index) => index === arrIndex[i]);\r\n      newArr[i] = item;\r\n    }\r\n \r\n    recordingMixItems(newArr);\r\n  };\r\n  \r\n  getUnique(min, max, n) {\r\n    if (n > max-min+1 || n < 0) return [];\r\n    const buf = [];\r\n    \r\n    for (let i=0; i<n;) {\r\n      const value = Math.round(Math.random() * (max-min)) + min;\r\n      \r\n      if (buf.length === 0) {\r\n        buf[0] = value;\r\n        i++;\r\n      }\r\n  \r\n      if (buf.indexOf(value) === -1) {\r\n        buf.push(value);\r\n        i++;\r\n      }\r\n    }\r\n    \r\n    const res = [];\r\n    for (let i in buf) res[res.length] = buf[i];\r\n    return res;\r\n  };\r\n\r\n  handleRestartGame = () => {\r\n    const { onRestartGame } = this.props;\r\n\r\n    onRestartGame();\r\n    this.mixItems();\r\n  };\r\n\r\n  render() {\r\n    const { classes, arrMixItems } = this.props;\r\n\r\n    return (\r\n      <Droppable droppableId=\"droppableElements\">\r\n        {(provided) => (\r\n          <Box\r\n            className={classes.wrBodyGame}\r\n            ref={provided.innerRef}\r\n            {...provided.droppableProps}\r\n          >\r\n            <Box className={classes.playingField}>\r\n              {\r\n                arrMixItems.map((item, index) => {\r\n                  return (\r\n                    <ListGameItems\r\n                      key={item.id}\r\n                      id={item.id}\r\n                      type={item.type}\r\n                      load={item.load}\r\n                      index={index}\r\n                      handleRestartGame={this.handleRestartGame}\r\n                    />\r\n                  );\r\n                })\r\n              }\r\n            </Box>\r\n            {provided.placeholder}\r\n          </Box>\r\n        )}\r\n      </Droppable>\r\n    );\r\n  };\r\n};\r\n\r\nconst mapStateToProps = ({ arrMixItems }) => {\r\n  return {\r\n    arrMixItems\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n  recordingMixItems,\r\n  onRestartGame\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(BodyGame);\r\n","// Material-UI\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  wrFooterGame: {\r\n    border: '1px solid #fff',\r\n    padding: '5px',\r\n    color: '#fff',\r\n    userSelect: 'none'\r\n  }\r\n}));\r\n\r\nexport default useStyles;\r\n","// Base\r\nimport React from 'react';\r\n\r\n// Material-UI\r\nimport Box from '@material-ui/core/Box';\r\n\r\n// Styles\r\nimport useStyles from './footer-game-styles';\r\n\r\nconst FooterGame = ({ message }) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Box className={classes.wrFooterGame}>\r\n      <Box componet='span'>{ message }</Box>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default FooterGame;\r\n","// Base\r\nimport React, { Component } from 'react';\r\n\r\n// React\r\nimport { connect } from 'react-redux';\r\nimport { draggingItems, recordingGameResults } from '../../reducers/index';\r\n\r\n// Material-UI\r\nimport Box from '@material-ui/core/Box';\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\n\r\n// Beautiful DND\r\nimport { DragDropContext } from \"react-beautiful-dnd\";\r\n\r\n// Components\r\nimport HeaderGame from '../header/header-game';\r\nimport BodyGame from '../body-game/body-game';\r\nimport FooterGame from '../footer/footer-game';\r\n\r\n// Styles\r\nconst styles = (theme) => ({\r\n  wrApp: {\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    height: '100vh'\r\n  },\r\n  playWindow: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    width: '100%',\r\n    maxWidth: '650px',\r\n    margin: '0 30px'\r\n  },\r\n  wrBodyGame: {\r\n    border: '1px solid #fff',\r\n    margin: '5px 0',\r\n    background: '#fff'\r\n  },\r\n  playingField: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n    padding: '5px'\r\n  }\r\n});\r\n\r\nclass App extends Component {\r\n\r\n  componentDidUpdate(prevProps) {\r\n    if (this.props !== prevProps) {\r\n      this.handleEndGameCheck();\r\n    };\r\n  };\r\n\r\n  reorder = (list, startIndex, endIndex) => {   \r\n    const result = Array.from(list);\r\n    // Remove one element this startIndex\r\n    const [removed] = result.splice(startIndex, 1);\r\n    // Inserts the deleted element after endIndex\r\n    result.splice(endIndex, 0, removed);\r\n\r\n    return result;\r\n  };\r\n\r\n  onDragEnd = (result) => {\r\n    const { arrMixItems, draggingItems } = this.props;\r\n    const { source, destination } = result;\r\n    let reorderList = null;\r\n\r\n    // Dropped outside the list\r\n    if (!destination) return;\r\n\r\n    // Sorting folders\r\n    if (source.droppableId === 'droppableElements' && destination.droppableId === 'droppableElements') {\r\n      reorderList = this.reorder(arrMixItems, source.index, destination.index);\r\n      draggingItems(reorderList);\r\n    }\r\n  };\r\n\r\n  handleEndGameCheck = () => {\r\n    const { arrMixItems, recordingGameResults } = this.props;\r\n    let p = 0;\r\n\r\n    for (let i=0; i<arrMixItems.length - 1; i++) {\r\n      if (arrMixItems[i].load < arrMixItems[i+1].load) {\r\n        p++;\r\n      }\r\n    }\r\n\r\n    if (p === arrMixItems.length - 1) {\r\n      const message = 'Game over! To restart the game, click on the chips.';\r\n\r\n      recordingGameResults(message);\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { classes, settings, message } = this.props;\r\n\r\n    return (\r\n      <Box className={classes.wrApp}>\r\n        <Box className={classes.playWindow}>\r\n          <HeaderGame />\r\n          <DragDropContext onDragEnd={this.onDragEnd}>\r\n            <BodyGame classes={classes} settings={settings} />\r\n          </DragDropContext>\r\n          <FooterGame message={message} />\r\n        </Box>\r\n      </Box>   \r\n    );\r\n  };\r\n};\r\n\r\nconst mapStateToProps = ({ settings, arrMixItems, message }) => {\r\n  return {\r\n    settings,\r\n    arrMixItems,\r\n    message\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n  draggingItems,\r\n  recordingGameResults\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(App));\r\n","// Basic\nimport React from 'react';\nimport ReactDOM from 'react-dom';\n\n// Redux\nimport { Provider } from 'react-redux';\nimport store from './store';\n\n// Components\nimport App from './components/app/app';\n\n// Styles\nimport './index.css';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}